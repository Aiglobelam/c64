    
    1       5         10        15        20        25        30        35        40 
    |       |         |         |         |         |         |         |         |
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
0  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 0) 1024-1063 $0400-$0427
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
1  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 1) 1064-1103 $0428-$044F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
2  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 2) 1104-1143 $0450-$0477
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
3  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 3) 1144-1183 $0478-$049F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
4  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 4) 1184-1223 $04A0-$04C7
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
5  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 5) 1224-1263 $04C8-$04EF
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
6  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 6) 1264-1303 $04F0-$0517
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
7  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 7) 1304-1343 $0518-$53F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
8  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 8) 1344-1383 $0540-$0567
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
9  |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 9) 1384-1423 $0568-$058F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
10 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 10) 1424-1463 $0590-$05B7
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
11 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 11) 1464-1503 $05B8-$05DF
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
12 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 12) 1504-1543 $05E0-$0607
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
13 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 13) 1544-1583 $0608-$062F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
14 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 14) 1584-1623 $0630-$0657
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
15 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 15) 1624-1663 $0658-$067F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
16 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 16) 1664-1703 $0680-$06A7
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
17 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 17) 1704-1743 $06A8-$06CF
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
18 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 18) 1744-1783 $06D0-$6F7
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-| 
19 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 19) 1784-1823 $06F8-$071F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
20 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 20) 1824-1863 $0720-$0747
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
21 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 21) 1864-1903 $0748-$76F
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
22 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 22) 1904-1943 $0770-$0797
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
23 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 23) 1944-1983 $0798-$07BF
   |-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|
24 |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9| 24) 1984-2023 $07C0-07E7
    |       |         |         |         |         |         |         |         |
    1       5         10        15        20        25        30        35        40 

-------------------------------------
- Screen RAM $0400-$07E7  1024 - 2023
-------------------------------------
The screen consits of 25 rows with 40 columns each => 1000 positions
Each position can hold 8x8 bits = 64 bits = 8 Bytes
The screen consists of 1000 positions, each 8x8 bits => 1000x8x8 bits, 64000 bits

------------------------
- RESOLUTION c64 320*200
------------------------
    * Each column is 8 bits wide 
    * There is 40 columns
    * There is 25 rows
        Horizontal resolution
            Each h-row is 8 * 40 bits wide
            Each h-row is 320    bits wide
        Vertical resolution:
            Each v-row is 8 * 25 bits wide
            Each v-row is 200    bits wide

---------------
- Unused memory
---------------
2024-2039 aka $07E8-07F7 is unused!!! That is 16 Bytes.

---------
- Sprites 
---------
1 Sprite = 64 bytes = $40 = 0100 0000
A Standard Sprite on c64 is 24x21=504
504 bits = 63 bytes => 503/8=63 
63 bytes per Sprite Shape, a trailin 0 Byte is added at the end.
64 bytes per Sprite Shape 

-----------------
- Sprite pointers
-----------------
Did you notice they are directyl after the Unused memory?
Sprite pointers are located at 2040-2047 $07F8-$07FF that is 8 Bytes
1) $07f8
2) $07f9
3) $07fa
4) $07fb
5) $07fc
6) $07fd
7) $07fe
8) $07ff

If 1) $07F8 points to/is set to #$00 data for sprite will be at pos $0000 in mem
If 1) $07F8 = #$01 data for sprite will be at pos $0040 in mem
If 1) $07F8 = #$02 data for sprite will be at pos $0080 in mem
If 1) $07F8 = #$03 data for sprite will be at pos $00C0 in mem
. . .
If 1) $07F8 = #$80 data for sprite will be at pos $2000 in mem

Formula: "sprite size in bytes" * "number stored in pointer" = "location in mem where sprite is"
Formula:         #$40           *              $80           = $2000 

-----------------
- Sprite Enablers
-----------------
Enable sprites register = $d015
If $d015 is $00 no sprites enabled         0000 0000
If $d015 is $01 sprite 1 is enabled        0000 0001
If $d015 is $02 sprite 2 is enabled        0000 0010
If $d015 is $03 sprite 1 and 2 are enabled 0000 0011
If $d015 is $04 sprite 3 is enabled        0000 0100
If $d015 is $05 sprite 1 and 3 are enabled 0000 0101
If $d015 is $06 sprite 2 and 3 are enabled 0000 0110
If $d015 is $07 sprite 1,2,3 are enabled   0000 0111
...
If $d015 is $ff sprite 1,2,3,4,5,6,7,8 are enabled 1111 1111

-------------------------
- Sprite positioning x,y
------------------------- 
1) $07f8 x:$d000, y:$d001
2) $07f9 x:$d002, y:$d003
3) $07fa x:$d004, y:$d005
4) $07fb x:$d006, y:$d007
5) $07fc x:$d008, y:$d009
6) $07fd x:$d00a, y:$d00b
7) $07fe x:$d00c, y:$d00d
8) $07ff x:$d00e, y:$d00f

$d010 move across all screen?


--------------------------------------
- Color  RAM $D800-$DBE7 55296 - 56295
--------------------------------------
* OBS Color Ram/Mem is only used to colorize screen jn in character mode not in bitmap mode.
Maps 1:1 with Screen RAM
Decide color in each position
A color RAM Byte "0000     0000" 
                 "Nibble Nibble"
                 "HIGH      LOW"
The lower NIBBLE is used to set the forground color.
Only 16 colors available in C64, 16 colors can be can be described using only 4 bits

----------------------
- Color in Bitmap mode
----------------------
* Colors are taken from screen memory not color ram
One position 8x8 64 bits
  1 2 3 4 5 6 7 8
1 u u u u . . . .
2 . . . . . . . .
3 . . . . . . . .
4 . . . . . . . .
5 . . . . . . . .
6 . . . . . . . .
7 . . . . . . . .
* u = upper 4 bits, if a bit is 1 it will have this color
* l = lower 4 bits, if a bit is 0 it will have this color
